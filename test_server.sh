#!/bin/bash

# Script para probar el servidor MCP con ejemplos de consultas

SERVER_HOST="127.0.0.1"
SERVER_PORT="8080"

echo "üß™ Script de pruebas para el servidor MCP MongoDB"
echo "üì° Servidor: ${SERVER_HOST}:${SERVER_PORT}"
echo ""

# Funci√≥n para enviar mensajes MCP usando netcat
send_mcp_message() {
    local message="$1"
    echo "üì§ Enviando: $message"
    echo "$message" | nc $SERVER_HOST $SERVER_PORT
    echo ""
}

# Verificar que netcat est√© disponible
if ! command -v nc &> /dev/null; then
    echo "‚ùå netcat (nc) no est√° instalado. Instal√°ndolo..."
    if command -v apt-get &> /dev/null; then
        sudo apt-get update && sudo apt-get install -y netcat
    elif command -v yum &> /dev/null; then
        sudo yum install -y nc
    elif command -v brew &> /dev/null; then
        brew install netcat
    else
        echo "Por favor instala netcat manualmente"
        exit 1
    fi
fi

# Verificar que el servidor est√© corriendo
if ! nc -z $SERVER_HOST $SERVER_PORT; then
    echo "‚ùå El servidor no est√° corriendo en ${SERVER_HOST}:${SERVER_PORT}"
    echo "Por favor ejecuta: ./run.sh"
    exit 1
fi

echo "‚úÖ Servidor encontrado, ejecutando pruebas..."
echo ""

# 1. Inicializar el servidor
echo "1Ô∏è‚É£ Inicializando servidor..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 1,
    "method": "initialize",
    "params": {}
}'

# 2. Listar herramientas disponibles
echo "2Ô∏è‚É£ Listando herramientas disponibles..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 2,
    "method": "tools/list"
}'

# 3. Listar todos los estudiantes
echo "3Ô∏è‚É£ Listando todos los estudiantes..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 3,
    "method": "tools/call",
    "params": {
        "name": "list_students"
    }
}'

# 4. Buscar un estudiante espec√≠fico
echo "4Ô∏è‚É£ Buscando estudiante Mar√≠a Garc√≠a..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 4,
    "method": "tools/call",
    "params": {
        "name": "get_student_by_name",
        "arguments": {
            "name": "Mar√≠a Garc√≠a"
        }
    }
}'

# 5. Obtener notas de un estudiante
echo "5Ô∏è‚É£ Obteniendo notas de Juan P√©rez..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 5,
    "method": "tools/call",
    "params": {
        "name": "get_student_grades",
        "arguments": {
            "name": "Juan P√©rez"
        }
    }
}'

# 6. Obtener notas de una asignatura
echo "6Ô∏è‚É£ Obteniendo notas de matem√°ticas..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 6,
    "method": "tools/call",
    "params": {
        "name": "get_subject_grades",
        "arguments": {
            "subject": "matematicas"
        }
    }
}'

# 7. Calcular promedio de un estudiante
echo "7Ô∏è‚É£ Calculando promedio de Ana Mart√≠nez..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 7,
    "method": "tools/call",
    "params": {
        "name": "calculate_student_average",
        "arguments": {
            "name": "Ana Mart√≠nez"
        }
    }
}'

# 8. A√±adir un nuevo estudiante
echo "8Ô∏è‚É£ A√±adiendo nuevo estudiante..."
send_mcp_message '{
    "jsonrpc": "2.0",
    "id": 8,
    "method": "tools/call",
    "params": {
        "name": "add_student",
        "arguments": {
            "name": "Pedro S√°nchez",
            "subjects": {
                "matematicas": 8.8,
                "historia": 9.2,
                "ciencias": 8.5,
                "literatura": 8.7,
                "ingles": 9.0
            }
        }
    }
}'

echo "üéâ Pruebas completadas!"
echo ""
echo "üí° Puedes ejecutar consultas personalizadas usando:"
echo "   echo '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"tools/call\",\"params\":{\"name\":\"HERRAMIENTA\",\"arguments\":{...}}}' | nc $SERVER_HOST $SERVER_PORT"